{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/SkyGate/src/components/common/Breadcrumb.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Breadcrumb = () => {\n  _s();\n  const location = useLocation();\n\n  // Don't show breadcrumb on homepage\n  if (location.pathname === '/') {\n    return null;\n  }\n  const pathnames = location.pathname.split('/').filter(x => x);\n  const getPageName = pathname => {\n    switch (pathname) {\n      case 'about':\n        return 'About Us';\n      case 'logistics':\n        return 'Logistics Services';\n      case 'travel':\n        return 'Travel Services';\n      case 'contact':\n        return 'Contact Us';\n      default:\n        return pathname.charAt(0).toUpperCase() + pathname.slice(1);\n    }\n  };\n  const getBreadcrumbStyle = () => {\n    if (location.pathname.includes('/logistics')) {\n      return {\n        backgroundColor: 'rgba(191, 37, 48, 0.1)',\n        borderColor: '#bf2530',\n        color: '#bf2530'\n      };\n    } else if (location.pathname.includes('/travel')) {\n      return {\n        backgroundColor: 'rgba(30, 186, 85, 0.1)',\n        borderColor: '#1eba55',\n        color: '#1eba55'\n      };\n    } else {\n      return {\n        backgroundColor: 'rgba(94, 113, 106, 0.1)',\n        borderColor: '#5e716a',\n        color: '#5e716a'\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"bg-white border-b border-gray-200 px-4 py-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-premium\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"text-gray-500 hover:text-gray-700 transition-colors duration-200\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), pathnames.map((pathname, index) => {\n          const routeTo = `/${pathnames.slice(0, index + 1).join('/')}`;\n          const isLast = index === pathnames.length - 1;\n          const pageName = getPageName(pathname);\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-400\",\n              children: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), isLast ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              style: {\n                color: getBreadcrumbStyle().color\n              },\n              children: pageName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Link, {\n              to: routeTo,\n              className: \"text-gray-500 hover:text-gray-700 transition-colors duration-200\",\n              children: pageName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)]\n          }, pathname, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Breadcrumb, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Breadcrumb;\nexport default Breadcrumb;\nvar _c;\n$RefreshReg$(_c, \"Breadcrumb\");","map":{"version":3,"names":["React","useLocation","Link","jsxDEV","_jsxDEV","Breadcrumb","_s","location","pathname","pathnames","split","filter","x","getPageName","charAt","toUpperCase","slice","getBreadcrumbStyle","includes","backgroundColor","borderColor","color","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","map","index","routeTo","join","isLast","length","pageName","Fragment","style","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/SkyGate/src/components/common/Breadcrumb.jsx"],"sourcesContent":["import React from 'react';\nimport { useLocation, Link } from 'react-router-dom';\n\nconst Breadcrumb = () => {\n  const location = useLocation();\n  \n  // Don't show breadcrumb on homepage\n  if (location.pathname === '/') {\n    return null;\n  }\n\n  const pathnames = location.pathname.split('/').filter(x => x);\n  \n  const getPageName = (pathname) => {\n    switch (pathname) {\n      case 'about':\n        return 'About Us';\n      case 'logistics':\n        return 'Logistics Services';\n      case 'travel':\n        return 'Travel Services';\n      case 'contact':\n        return 'Contact Us';\n      default:\n        return pathname.charAt(0).toUpperCase() + pathname.slice(1);\n    }\n  };\n\n  const getBreadcrumbStyle = () => {\n    if (location.pathname.includes('/logistics')) {\n      return {\n        backgroundColor: 'rgba(191, 37, 48, 0.1)',\n        borderColor: '#bf2530',\n        color: '#bf2530'\n      };\n    } else if (location.pathname.includes('/travel')) {\n      return {\n        backgroundColor: 'rgba(30, 186, 85, 0.1)',\n        borderColor: '#1eba55',\n        color: '#1eba55'\n      };\n    } else {\n      return {\n        backgroundColor: 'rgba(94, 113, 106, 0.1)',\n        borderColor: '#5e716a',\n        color: '#5e716a'\n      };\n    }\n  };\n\n  return (\n    <nav className=\"bg-white border-b border-gray-200 px-4 py-3\">\n      <div className=\"container-premium\">\n        <div className=\"flex items-center space-x-2 text-sm\">\n          <Link \n            to=\"/\" \n            className=\"text-gray-500 hover:text-gray-700 transition-colors duration-200\"\n          >\n            Home\n          </Link>\n          \n          {pathnames.map((pathname, index) => {\n            const routeTo = `/${pathnames.slice(0, index + 1).join('/')}`;\n            const isLast = index === pathnames.length - 1;\n            const pageName = getPageName(pathname);\n            \n            return (\n              <React.Fragment key={pathname}>\n                <span className=\"text-gray-400\">/</span>\n                {isLast ? (\n                  <span \n                    className=\"font-medium\"\n                    style={{ color: getBreadcrumbStyle().color }}\n                  >\n                    {pageName}\n                  </span>\n                ) : (\n                  <Link \n                    to={routeTo}\n                    className=\"text-gray-500 hover:text-gray-700 transition-colors duration-200\"\n                  >\n                    {pageName}\n                  </Link>\n                )}\n              </React.Fragment>\n            );\n          })}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}